/*9 - Define our color palette using variables so we can reuse them in multiple places */
:root {
  --border-radius: 30px;
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  /*text colors*/
  --color-headings: #1b0760;
  --color-body: #918ca4;
  --color-body-darker: #5c5577;
  --color-border: #ccc;
}

/*define a rule using the universal selector*/
/*
* -->all elements
*::after, *::before -->  all elements dinamically inserted
*/

*,
*::after,
*::before {
  box-sizing: border-box; /*this will provide that block buttons (.btn--block) inside or outside anchor <a> elements will have the same behaviour*/
}

.container {
  max-width: 1140px;
  margin: 0 auto; /*0 pixels for vertical margin adn auto for horizontal margin */
  /*if we have extra space, the space will be equally distributed to the sides of the block*/
}

/*--------10 - TYPOGRAPHY----------------------*/

/*to specify the color of the selected text*/
::selection {
  background: var(--color-primary);
  color: #fff;
}

html {
  /*font-size: 16x; -> 16px is the default size*/
  /* 62.5% of 16px = 10px*/
  font-size: 62.5%;
}

body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  line-height: 1.5;
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem;
  line-height: 1.1;
}

/*1 rem = 1 x font size of the html element*/
/*since html font size is 62.5% * 16px = 10px = 1 rem*/
h1 {
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
  font-weight: 500;
}

p {
  margin-top: 0; /*to avoid margin colapsing with h3 margin-bottom*/
}

@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }

  h1 {
    font-size: 8rem;
  }

  h2 {
    font-size: 4rem;
  }

  h3 {
    font-size: 2.4rem;
  }
}

/*--------11 - LINKS----------------------*/

a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  transition: margin 0.15s;
}

/*just target the arrow element inserted with ::after*/
.link-arrow:hover::after {
  margin-left: 10px;
}

/*adjust the link size for desktop wider screens*/

@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/*--------12 - BADGES----------------------*/

/*Applying object oriented CSS principles!
    Separate stucture from skin:
       define classes: 
            - one for basic structure - padding and font size 
            - other classes for different skins like colors and sizes */

/*defining the stucture*/
.badge {
  border-radius: 20px;
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem 2rem; /*vertical and horizontal*/
  white-space: nowrap; /*prevents the badge from wrapping into a second line.*/
}

/*defining the skin
    using the BAM (block element modifier) naming convention
      - we use -- to separate a block or a component from a modifier */
.badge--primary {
  background: var(--color-primary);
  color: #fff;
}

.badge--secondary {
  background: var(--color-secondary);
  color: #fff;
}

.badge--small {
  font-size: 1.6rem;
  padding: 0.5rem 1.5rem;
}

/*adjust the badges size for desktop wider screens*/

@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.2rem;
  }
}

/*--------13 - LISTS----------------------*/

/* we have 2 types of lists (in common they dont have the default bullet points:
      - horizontal or inline lists (with the badges or the nav bar)
      - vertical lists (with green ticks or the ones in the footer)  */

/*this list class can represent either vertical or horizontal lists*/
.list {
  list-style: none; /*gets rid of the default bullet point*/
  padding-left: 0; /*gets rid of the default padding*/
}

/*create an inline list (variation/modifier of the .list) applying Object oriented CSS principles (separate structure from skin*/
.list--inline .list__item {
  display: inline-block; /*inline-block will allow to apply margins */
  margin-right: 2rem;
}

.list--tick {
  list-style-image: url(../icons/tick.svg);
  padding-left: 3rem;
  color: var(--color-headings);
}

.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

/*adjust the lists for desktop wider screens*/

@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0rem;
  }
}

/*--------14 - ICONS----------------------*/

/*using https://svgsprit.es/ gets all the svg files in just one*/

/*structure*/
.icon {
  width: 40px;
  height: 40px;
}

.icon--small {
  width: 30px;
  height: 30px;
}

/*skin*/
/* -- indicates that is not a new class but a variation or a modifier for the icon class*/
.icon--primary {
  fill: var(--color-primary);
}

.icon--white {
  fill: #fff;
}

.icon-container {
  background: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%; /*round shape*/
  display: inline-flex; /*since the the span element is an inline element*/
  /*center the icon in the round circle, 2 properties: */
  /* first- aligning along the primary axis, by default the horizontal */
  justify-content: center;
  /* second - aligning along the secondary axis, by default the vertical */
  align-items: center;
}

.icon-container--accent {
  background: var(--color-accent);
}

/*--------15 - BUTTONS----------------------*/

/* In terms of the size we have 2 types of buttons:
    - some just strech to fit their content (the search button)
    - other strech to fill all the available space (block buttons - width of 100%)*/

/*structure*/
.btn {
  border-radius: 40px;
  border: 0;
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 0; /*vertical and horizontal. To separate the button from other elements*/
  outline: 0;
  padding: 2rem 3rem; /*vertical and horizontal*/
  text-transform: uppercase;
  white-space: nowrap; /*In case we have limited space dont want the text in the button to wrap onto a second line */
  text-align: center; /*To make sure the text is always in the center of the button*/
}

/*define the size of an icon inside a button*/
.btn .icon {
  width: 2rem;
  height: 2rem;
  margin-right: rem;
  vertical-align: middle;
}

/*skins*/
.btn--primary {
  background: var(--color-primary);
  color: #fff;
}

.btn--primary:hover {
  background: #3a8ffe; /*with SASS use function lighten(primary, 10%) */
}

.btn--secondary {
  background: var(--color-secondary);
  color: #fff;
}

.btn--secondary:hover {
  background: #00c8eb;
}

.btn--accent {
  background: var(--color-accent);
  color: #fff;
}

.btn--accent:hover {
  background: #ec3000;
}

.btn--outline {
  background: #fff;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}

.btn--outline:hover {
  background: var(--color-headings);
  color: #fff;
}

.btn--stretched {
  padding-left: 6rem;
  padding-right: 6rem;
}

/*skin for block buttons*/
.btn--block {
  width: 100%;
  display: inline-block; /*anchor elements are inline by default*/
}

/*adjust the buttons for desktop version*/

@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}

/*--------16 - INPUTS----------------------*/

.input {
  border-radius: var(--border-radius);
  border: 1px solid var(--color-border);
  color: var(--color-headings);
  font-size: 2rem;
  outline: 0;
  padding: 1.5rem 3.5rem;
}

/*change the placeholder - use a pseudo element selector*/
::placeholder {
  color: #cdcbd7;
}

/*adjust the inputs for desktop version*/

@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/*--------17 - INPUT GROUPS----------------------*/

/*we are grouping the input element with a button. We can group with an icon or any other elements*/

/*this class is a div component wraped arround the input and the button components
so were making it look like if its a input component*/
/*Div is a block level element to it takes the width of the page streching to the end*/
.input-group {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  display: flex;
}

/*remove the border from the input component inside the div class .input-group*/
/*using nesting*/
.input-group .input {
  border: 0;
  flex-grow: 1; /*the input field will grouw to take all the available space inside the div*/
  padding: 1.5rem 2rem;
}

/*define the margin of the button inside the .input-group*/
.input-group .btn {
  margin: 4px;
}

/*--------18 - CARDS----------------------*/

/*structure*/

/*this is a div, a block level element, dont apply width because this component should be 
fluid and flexible so we can put is in any container. The size will be determined by the container*/
.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3; /*0 0 for horizontal and vertical offset, 20px for blurring the shadow making it softer, 10px for spreading the shadow  */
  overflow: hidden;
}

/*apply same padding to both elements so they align properly*/
.card__header,
.card__body {
  padding: 2rem 3rem;
}

/*skins*/

.card--primary .card__header {
  background: var(
    --color-primary
  ); /*since we give the header a color it has grown larger than its parent/container (the card element) --> overflow, this makes the round corners on top disapear. Need to set the overflow property on the parent/container*/
  color: #fff;
}

.card--secondary .card__header {
  background: var(--color-secondary);
  color: #fff;
}

.card--primary .badge--primary {
  background: #126de4;
}

.card--secondary .badge--secondary {
  background: #02cdf1;
}

/*--------19 - PLANS / 20 - POPULAR BADGE----------------------*/

.plan {
  transition: transform 0.2s ease-out;
}

.plan__name {
  color: #fff;
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}

.plan__price {
  font-size: 6rem;
}

.plan__billing-cycle {
  font-size: 2.4rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}

.plan__description {
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  opacity: 0.8;
  display: block; /*Because the descritpion is a span element, its inline, so with extra space it comer after the badge. So we need to make it a block level element */
}

.plan .list__item {
  margin-bottom: 2rem;
}

/*The popular plan should be slightly larger than other plans*/
.plan--popular {
  transform: scale(1.1); /*10% larger*/
}

/* *** make the parent/container (.card__header) a relatively position element */
.plan--popular .card__header {
  position: relative;
}

/*Setting the Popular badge*/
/*We use the plan--popular class to dinamically insert he popular icon svg image using pseudo element selectors.
Insert the image before the content of the header element*/
.plan--popular .card__header::before {
  content: url(../icons/popular.svg);
  width: 40px;
  display: inline-block; /*because its a div which is a inline element need to change to inline block so the width works*/
  /*move the icon using absolute positioning
  We should make the parent or the container (.card__header) a relatively position element ...so we need to define another rule*** */
  position: absolute;
  top: -6px;
  right: 5%;
}

.plan:hover {
  transform: scale(1.05); /*5% larger*/
}

.plan--popular:hover {
  transform: scale(1.15); /*5% larger*/
}

/*adjust the Plans for desktop version*/

@media screen and (min-width: 1024px) {
  .plan__name {
    font-size: 1.4rem;
  }

  .plan__price {
    font-size: 5rem;
  }

  .plan__billing-cycle {
    font-size: 1.6rem;
  }

  .plan__description {
    font-size: 1.7rem;
  }
}

/*--------21 - MEDIA OBJECTS/COMPONENTS----------------------*/

.media {
  display: flex;
  margin-bottom: 4rem;
}

.media__title {
  margin-top: 0;
}

.media__body {
  margin: 0 2rem; /*vertical = 0; horizontal = 2rem*/
}

.media__image {
  margin-top: 1rem;
}

/*--------22 - QUOTES----------------------*/

.quote {
  font-size: 3rem;
  font-style: italic;
  color: var(--color-body-darker);
  line-height: 1.3;
}

.quote__text::before {
  content: open-quote;
}

.quote__text::after {
  content: close-quote;
}

.quote__author {
  font-size: 3rem;
  font-weight: 500;
  font-style: normal;
  margin-bottom: 0;
}

.quote__company {
  color: var(--color-headings);
  font-size: 2rem;
  font-style: normal;
  opacity: 0.4;
}

/*use relative positioning*/
.quote__line {
  position: relative;
  bottom: 10px;
}

/*adjust the Quotes for desktop version*/

@media screen and (min-width: 1024px) {
  .quote {
    font-size: 2rem;
  }

  .quote__author {
    font-size: 2.4rem;
  }

  .quote__company {
    font-size: 1.6rem;
  }
}

/*--------23 - GRIDS----------------------*/

.grid {
  display: grid;
}

/*adjust the grid for tablets version*/

@media screen and (min-width: 768px) {
  .grid--1x2 {
    grid-template-columns: 1fr 1fr; /*or use repeat(2, 1fr)*/
  }
}

/*adjust the grid for desktop version*/

@media screen and (min-width: 1024px) {
  .grid--1x3 {
    grid-template-columns: repeat(3, 1fr);
  }
}

/*--------24 - TESTIMONIALS----------------------*/

.testimonial {
  padding: 3rem;
}

.testimonial__image {
  position: relative;
}

.testimonial__image > img {
  width: 100%; /*making the image responsive and resizes along with the width of the column*/
}

.testimonial__image > .icon-container {
  position: absolute;
  top: 3rem;
  right: -32px; /*.icon-container(width: 64px, height:64px, if we want the icon in the center just divide this by 2*/
}

/*adjust the testimonial for tablets version*/

@media screen and (min-width: 768px) {
  .testimonial .quote,
  .testimonial .quote__author {
    font-size: 2.4rem;
  }

  .testimonial .quote {
    margin-left: 6rem;
  }
}

/*--------25 - CALLOUTS----------------------*/

/*Structure*/
.callout {
  padding: 4rem;
  border-radius: 5px;
}

.callout .btn {
  justify-self: center; /*horizontal alignment*/
  align-self: center; /*vertical alignment*/
}

.callout__content {
  text-align: center;
}

/*Skins*/
.callout--primary {
  background-color: var(--color-primary);
  color: #fff;
}

.callout__heading {
  color: #fff;
  margin-top: 0;
  font-size: 3rem;
}

/*adjust the callouts for tablets version*/

@media screen and (min-width: 768px) {
  .callout .grid--1x2 {
    grid-template-columns: 1fr auto; /*1fr for 1st column, auto for the 2nd column*/
  }
  .callout__content {
    text-align: left;
  }

  .callout .btn {
    justify-self: start;
    margin: 0 2rem;
  }
}

/*--------26 - COLLAPSIBLES----------------------*/

.collapsible__header {
  display: flex; /*allows for we can move the icon vertically and horizontaly*/
  justify-content: space-between; /*push the icon to the right edge of the container and add space between them*/
}

.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}

.collapsible__chevron {
  transform: rotate(-90deg); /*rotates the icon*/
  transition: transform 0.3s;
}

.collapsible__content {
  /*display: none; hides the content area*/
  max-height: 0;
  opacity: 0;
  overflow: hidden;
  transition: all 0.3s;
}

.collapsible--expanded .collapsible__chevron {
  transform: rotate(0); /*0 is the inictial position of the icon*/
}

.collapsible--expanded .collapsible__content {
  /*display: block; shows the content area*/
  max-height: 100vh;
  opacity: 1;
}

/*--------27 - BLOCKS----------------------*/

.block {
  /*define a variable or a custom property*/
  --padding-vertical: 6em; /*this custom property is available to a element with the class of block and all of his children*/
  padding: var(--padding-vertical) 2rem;
}

.block__header {
  text-align: center;
  margin-bottom: 4rem;
}

.block__heading {
  margin-top: 0;
}

.block--dark {
  background: #000;
  color: #7b858b;
}

.block--dark h1,
.block--dark h2,
.block--dark h3 {
  color: #fff;
}

/*to generate a custom poligon google "clip path generator" bennettfeely.com and create a skewed block
copy the code on the bottom*/

/*paste the property generated by the site*/
.block--skewed-right {
  /*x offset y offset*/
  /*top left corner of the block*/
  /*top right corner of the block*/
  /*bottom right corner of the block*/
  /*bottom left corner of the block*/
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 90%);
  padding-bottom: calc(var(--padding-vertical) + 4rem);
}

.block--skewed-left {
  clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
  padding-bottom: calc(var(--padding-vertical) + 4rem);
}

/*--------28 - NAVIGATION BARS----------------------*/

.nav {
  background: #000;
  display: flex; /*places the items horizontaly by default*/
  justify-content: space-between; /*items are pushed to the side and the remaining space is distributed between other items 
   (on mobile we want that the logo and the menu icon to be pushed to the edges of the container*/
  flex-wrap: wrap;
  padding: 0 1rem;
  align-items: center;
}

/* push the list to the second line bellow the menu icon */
.nav__list {
  width: 100%; /*flex-wrap: wrap; needs to be set on .nav to enable width:100%*/
  margin: 0;
}

.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid #222;
}

/*since links have their own colors we need to write a new rule using a direct child selector
to target the anchor inside the element*/
.nav__item > a {
  color: #d2d0db;
  transition: color 0.3s;
}

.nav__item > a:hover {
  color: #fff;
}

.nav__toggler {
  opacity: 0.5;
  transition: box-shadow 0.15s;
  cursor: pointer; /*so the toggler looks clickable*/
}

/*to make sure that this style (.collapsible--expanded) is only applied to a navigation bar
that is expanded we need to use a double class selector (select an element that has both the .nav class as
well as .collapsible--expanded .  */
.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}

/*to push the logo a bit down on the nav bar and gain more margin top... its a hack :P*/
.nav__brand {
  transform: translateY(5px);
}

/*adjust the navigation bar for the tablets and desktop version*/

@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none; /*hide the toggler*/
  }

  .nav__list {
    width: auto;
    display: flex; /*to lay the nav bar items horizontally*/
    font-size: 1.6rem;
    /*since the list appears hidden when its not expanded, with this p+roperties we can show the
    navigation list*/
    max-height: 100%;
    opacity: 1;
  }

  .nav__item {
    border: 0;
  }
}

/*--------29 - HERO----------------------*/

/*
.hero {
  overrite the rule for .block--skewed-left. In this particular block we want a small difference in the skewed of the polygon from 80% to 90%
  clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
}*/

.hero__tagline {
  font-size: 2rem;
  color: #b9c3cf;
  letter-spacing: 1px;
  margin: 2rem 0 5rem;
}

/*we need a responsive image that streches to fit its container: set width 100%*/
.hero__image {
  width: 100%;
}

/*adjust the hero for the tablets and desktop version*/

@media screen and (min-width: 768px) {
  .hero {
    padding-top: 0;
  }
  .hero__content {
    text-align: left;
    /*content area should be vertically in the middle so it will be centered with the image*/
    /*content area is inside a grid so change the vertical allignment of this item*/
    align-self: center;
  }
}

/*--------31 - DOMAIN BLOCK----------------------*/

/*style (with shadow and remove the border) the input group inside this domain block component */
.block-domain .input-group {
  box-shadow: 0 0 30px 20px #e6ebee;
  border: 0;
  margin: 4rem auto; /*vertical and horizontal*/
  max-width: 670px;
}

.block-domain__prices {
  display: grid;
  /*on mobile the grid will have 3 columns and 2 rows*/
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 6rem); /*6rem sets the hight of each row*/
  font-size: 2rem;
  font-weight: 600;
  justify-items: center;
  max-width: 700px;
  margin: 0 auto;
}

/*adjust the domain block for the tablets and desktop version*/

@media screen and (min-width: 768px) {
  .block-domain__prices {
    grid-template-columns: repeat(
      auto-fit,
      minmax(10rem, 1fr)
    ); /*repeat(6, 1fr); instead of hard coding 6, if latter we change an item we need to change 6 to, so set it to auto-fit*/
  }
}

/*--------32 - PLANS BLOCK----------------------*/

/*in the block called plans our grid should have a gap of 4rem*/
.block-plans .grid {
  gap: 8rem 4rem; /*rows / columns*/
}

/*with this we dont have to write a media query to define the width of the cards for tablets*/
.block-plans .card {
  max-width: 500px;
  margin: 0 auto;
}

/*--------33 - FEATURES BLOCK----------------------*/

.feature {
  gap: 4rem 2rem; /*rows / columns*/
  margin: 12rem 0;
}

/*Reduce the space between the heading and the article feature
Use pseudo class selectors to target the first feature */
.feature:first-of-type {
  margin-top: 6rem; /*overwrite the top margin. 50% of the margin assign in .feature 12rem*/
}

.feature__heading {
  margin: 1rem 0; /* vertical / horizontal*/
}

.feature__image {
  width: 100%;
}

/*adjust the features block for the tablets and desktop version*/

@media screen and (min-width: 768px) {
  /*using pseudo class selectors we are going to target every second feature (4 features - select the even features
so we can swap the order from right to left on desktop viewing. We are selecting the 2nd and the 4th features*/

  .feature:nth-of-type(even) .feature__content {
    order: 2; /*by default the order is 1. In our markup we added the content first then the image.
              Changing the order to two the image will take the position of the first item in the grid. */
  }
}

/*--------34 - SHOWCASE BLOCK----------------------*/

/*make the image responsible on mobile version*/
.block-showcase__picture > img {
  width: 100%;
}

/*adjust the showcase block for the tablets and desktop version*/

@media screen and (min-width: 768px) {
  /*we want to make sure we have 2 columns and each column is taking exaclty 50% of its parent.
  So on the tablet/desktop screen we need to redefine the column template for our grid*/

  .block-showcase .grid {
    grid-template-columns: 50% 50%; /*previously we had 1fr 1fr*. Now its 50% of the width of the container. The width of the column will not be determined by its content, like the image.*/
  }

  .block-showcase__picture {
    justify-self: end;
  }

  .block-showcase__picture > img {
    width: auto; /*the image will be displayed in its actual size*/
    max-width: 700px;
  }
}

/*--------34 - FOOTER----------------------*/

/*because the background in .block--dark is black we need in the footer instead a dark grey
so we set another class just for the footer background color*/
.footer {
  background: #232323;
}

/*define a color for all links in a footer*/
.footer a {
  color: #777;
  transition: 0.3s;
}

.footer a:hover {
  color: #fff;
}

.footer__section {
  padding: 2rem;
  border-bottom: 1px solid #393939;
}

/*remove the space between the list of links and the heading*/
.footer__section .list {
  margin: 0;
}

.footer__heading {
  text-transform: uppercase;
  font-weight: 600;
}

.footer__brand {
  margin-top: 5rem;
  text-align: center;
}

/*making the icon image responsive*/
.footer__brand img {
  /*TODO: Consider refactoring this and applying it to all images*/
  width: 100%;
  max-width: 230px; /*set the size of the image*/
}

.footer__copyright {
  font-size: 2.1rem;
  color: #fff;
  opacity: 0.3;
}

/*adjust the footer block for the tablets and desktop version*/

/* - no collapsibles (on a media query hide the chevron and show the content area)
   - the placement of the logo is on the first column 
*/

@media screen and (min-width: 768px) {
  /*here were going to redefine the template of our grid*/

  .footer__sections {
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
  }

  /*if in our footer we have a collapsible__chevron it should be hidden*/
  .footer .collapsible__chevron {
    display: none;
  }

  /*if in our footer we have a collapsible__content it should be visible*/
  .footer .collapsible__content {
    /* border-bottom: none;  we cant set to block because earlier we use a different tecjnique for animating the expansion of this object*/
    opacity: 1;
    max-height: 100%;
  }

  /*change the order of this element and place it before the first item of the grid*/
  .footer__brand {
    order: -1; /*by default the order of this elements is 0*/
    margin-top: 1rem; /*takes excess margin and brings this up*/
  }

  .footer__copyright {
    font-size: 1.5rem;
  }

  .footer__section {
    border: 0;
  }

  .footer__heading {
    font-size: 1.6rem;
  }
}
